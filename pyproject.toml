[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mygentic"
version = "0.1.0"
description = "A comprehensive toolkit for agentic AI systems including web scraping, document generation, API integrations, and workflow orchestration"
authors = [
    {name = "Neil Anthony", email = "neilanthony@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.12"
dependencies = [
    "loguru",
    "pydantic>=2.0.0",
    "pydantic-settings",
    "python-dotenv",
    "requests",
    "beautifulsoup4",
    "selenium",
    "tqdm",
    "rich",
    "google-generativeai",
    "crewai",
    "pydantic-ai",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio",
    "pytest-mock",
    "black",
    "ruff",
    "mypy",
]
web-scraping = [
    "firecrawl-py",
]
jupyter = [
    "jupyter",
    "ipykernel",
    "matplotlib",
    "pandas",
    "numpy",
    "itables",
]

[project.urls]
Homepage = "https://github.com/nranthony/my-agentic-tools"
Repository = "https://github.com/nranthony/my-agentic-tools"
Issues = "https://github.com/nranthony/my-agentic-tools/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["mygentic*"]
exclude = ["tests*", "notebooks*", "scripts*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.yml", "*.yaml"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
)/
'''

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "mygentic",
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]