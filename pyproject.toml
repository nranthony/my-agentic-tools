[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "my-agentic-tools"
version = "0.1.0"
description = "Collection of agents and tools for making life easier and learning new things"
authors = [{name = "Your Name", email = "your.email@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    # Core shared dependencies
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",
    "typer>=0.9.0",
    "rich>=13.7.0",
    "pyyaml>=6.0.0",
    "httpx>=0.25.0",
    "requests>=2.31.0",
    "jupyter>=1.0.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.5.0",
]

# Individual project dependencies
web-scraping = [
    "beautifulsoup4>=4.12.0",
    "selenium>=4.15.0",
    "firecrawl-py>=0.0.1",
    "lxml>=4.9.0",
    "scrapy>=2.11.0",
    "playwright>=1.40.0",
]

document-generation = [
    "jinja2>=3.1.0",
    "reportlab>=4.0.0",
    "pypdf>=3.17.0",
    "markdown>=3.5.0",
    "weasyprint>=60.0",
    "python-docx>=1.1.0",
    "pdfkit>=1.0.0",
    "latex>=0.7.0",
]

langgraph-agents = [
    "langgraph>=0.1.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0",
    "langchain-anthropic>=0.1.0",
    "langchain-community>=0.0.1",
    "langsmith>=0.1.0",
    "tavily-python>=0.3.0",
]

crewai-workflows = [
    "crewai>=0.28.0",
    "crewai-tools>=0.4.0",
    "langchain-openai>=0.1.0",
    "langchain-anthropic>=0.1.0",
]

mcp-tools = [
    "mcp>=1.0.0",
    "websockets>=12.0",
    "anyio>=4.0.0",
]

api-integrations = [
    "aiohttp>=3.9.0",
    "tenacity>=8.2.0",
    "openai>=1.0.0",
    "anthropic>=0.3.0",
    "responses>=0.24.0",
    "httpx-mock>=0.11.0",
]

# Install all projects
all = [
    "my-agentic-tools[web-scraping,document-generation,langgraph-agents,crewai-workflows,mcp-tools,api-integrations]"
]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests", "*/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov --cov-report=term-missing"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true